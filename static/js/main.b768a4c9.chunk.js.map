{"version":3,"sources":["bookmarklist/bookmark-images/self-link_light.svg","bookmarklist/bookmark-images/self-link_dark.svg","bookmarklist/bookmark-images/external-link_light.svg","bookmarklist/bookmark-images/external-link_dark.svg","title/Header.tsx","components/form-components/TextField.tsx","components/form-components/Checkbox.tsx","components/form-components/Button.tsx","components/palette/Palette.tsx","components/custom-color/CustomColor.tsx","modal/Modal.tsx","icons/Icons.tsx","bookmarklist/bookmark/Bookmark.tsx","bookmark.ts","bookmarklist/BookmarkList.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Header","props","react_default","a","createElement","className","title","desc","TextField","_ref","value","onChange","label","id","useEffect","input","document","getElementById","previousElementSibling","classList","add","htmlFor","type","_onChange","_x","apply","this","arguments","toString","e","target","onFocus","line","nextElementSibling","onBlur","remove","autoComplete","Checkbox","checked","viewBox","stroke","d","Button","isPrimary","onClick","concat","Cell","color","_onClick","style","background","Palette","_ref2","onSelectColor","colors","orderedColors","Object","toConsumableArray","slice","reverse","map","index","Palette_Cell","key","CustomColor","borderColor","RGBColor","hex","replace","length","split","c","join","R","parseInt","substr","G","B","handleColorChange","newColor","toUpperCase","RBGItem","_ref3","handleKey","evt","keyCode","preventDefault","addEventListener","removeEventListener","Modal","onSave","bookmark","dismissModal","_useState","useState","_useState2","slicedToArray","setValue","_useState3","url","_useState4","setUrl","_useState5","isExternal","_useState6","setIsExternal","_useState7","backColor","_useState8","setColor","Palette_Palette","components_custom_color_CustomColor","TextField_TextField","Checkbox_Checkbox","Button_Button","isEmpty","IconPlus","EditIcon","RemoveIcon","fill","Bookmark","handleAddEdit","handleRemove","backgroundImage","iconUrl","backgroundColor","Icons_IconPlus","href","rel","Icons_EditIcon","Icons_RemoveIcon","BookmarkModel","classCallCheck","BookmarkList","showModal","modalConfig","setModalConfig","strBookmarks","localStorage","getItem","JSON","parse","Array","from","i","bookmarks","setBookmarks","setItem","stringify","bookmarkKey","Fragment","Bookmark_Bookmark","Modal_Modal","backIsDark","bgColor","charAt","substring","r","g","b","isDark","externalLink","externalLinkDark","selfLink","selfLinkDark","App","Header_Header","src_bookmarklist_BookmarkList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b768a4c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/self-link_light.277aee37.svg\";","module.exports = __webpack_public_path__ + \"static/media/self-link_dark.d7e962e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/external-link_light.37f137de.svg\";","module.exports = __webpack_public_path__ + \"static/media/external-link_dark.24126654.svg\";","import React from 'react';\nimport './Header.scss';\n\ntype IHeaderProps = {title: string, desc: string};\n\nexport const Header = (props: IHeaderProps) => (\n  <div className=\"Header\">\n    <h1 className=\"title\">{props.title}</h1>\n    <p className=\"subtitle\"> {props.desc} </p>\n  </div>\n);\n\n","import React, { useEffect } from \"react\";\nimport './TextField.scss';\n\nexport const TextField = ({value, onChange, label, id}: TextFieldProps ) => {\n  const handleFocus = (e: React.FocusEvent) => {\n    const line = e.target.nextElementSibling as Element;\n    const label = e.target.previousElementSibling as HTMLLabelElement;\n    label.classList.add('float-above');\n    line.classList.add('extended');\n  };\n  const handleBlur = (e: React.FocusEvent) => {\n    const input = e.target as HTMLInputElement;\n    const line = input.nextElementSibling as Element;\n    const label = input.previousElementSibling as HTMLLabelElement;\n    line.classList.remove('extended');\n    !input.value && label.classList.remove('float-above');\n  };\n\n  useEffect(() => {\n    const input = document.getElementById(id) as HTMLInputElement;\n    const label = input.previousElementSibling as HTMLLabelElement;\n    input.value && label.classList.add('float-above');\n  }, []);\n  return (\n    <div className=\"input-group\">\n      <label htmlFor={id} className=\"float-label\">{label}</label>\n      <input type=\"text\"\n        id={id}\n        className=\"input-field\"\n        value={value}\n        onChange={e => onChange(id, e.target.value)}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        autoComplete=\"off\"\n      />\n      <div className=\"line-ripple\"></div>\n    </div>\n  );\n};\n\ntype TextFieldProps = {\n  label: string,\n  onChange: (id: string, value: string) => void,\n  value: string,\n  id: string\n}\n","import React from \"react\";\nimport './Checkbox.scss';\n\nexport const Checkbox = ({checked, onChange}: CheckboxProps ) => (\n  <label className=\"mdc-checkbox\">\n    <input type=\"checkbox\" id=\"checkbox\" className=\"mdc-checkbox__native-control\" checked={checked} onChange={e => onChange(!checked)} />\n    <div className=\"mdc-checkbox__background\">\n      <svg className=\"mdc-checkbox__checkmark\" viewBox=\"0 0 24 24\">\n        <path stroke=\"white\" d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"></path>\n      </svg>\n      <div className=\"mdc-checkbox__mixedmark\"></div>\n    </div>\n    Open in external tab\n  </label>\n);\n\ntype CheckboxProps = {\n  checked: boolean | undefined,\n  onChange: (value: boolean) => void,\n}\n","import React from 'react';\nimport './Button.scss';\n\nexport const Button = ({value, isPrimary, onClick}: {value: string, isPrimary: boolean, onClick: () => void} ) => (\n  <button className={`button ${isPrimary?'primary':'secondary'}`} onClick={onClick}>{value}</button>\n);\n","import React from \"react\";\nimport \"./Palette.scss\";\n\ntype CellProps = {\n  color: string,\n  onClick: any\n}\nconst Cell = ({ color, onClick }: CellProps) => (\n  <div\n    className=\"cell\"\n    onClick={() => onClick(color)}\n    style={{ background: color }}\n  />\n);\n\ntype PaletteProps = {\n  onSelectColor: (color: string) => void\n}\nexport default function Palette({ onSelectColor }: PaletteProps) {\n  const colors = [\n    \"#F44336\", \"#E91E63\", \"#9C27B0\", \"#673AB7\", \"#3F51B5\",\n    \"#2196F3\", \"#03A9F4\", \"#00BCD4\",  \"#009688\", \"#4CAF50\",\n    \"#8BC34A\", \"#CDDC39\", \"#FFEB3B\", \"#FFC107\", \"#FF9800\"\n  ];\n\n  const orderedColors = [\n    ...colors.slice(0, 5),\n    ...colors.slice(5, 10).reverse(),\n    ...colors.slice(10, 15)\n  ];\n\n  return (\n    <div className=\"Palette\">\n      {orderedColors.map((color, index) => (\n        <Cell key={index} color={color} onClick={() => onSelectColor(color)} />\n      ))}\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport \"./CustomColor.scss\";\ntype CustomColorProps = {\n  color: string;\n  onSelectColor: (value: string) => void;\n}\nconst CustomColor = ({ color, onSelectColor }: CustomColorProps) => (\n  <div className=\"CustomColor\">\n    <input\n      type=\"text\"\n      className=\"custom\"\n      style={{ borderColor: color }}\n      value={color}\n      onChange={e => onSelectColor(e.target.value)}\n    />\n    <RGBColor color={color} onSelectColor={onSelectColor} />\n  </div>\n);\nexport default CustomColor;\n\nfunction RGBColor({ color, onSelectColor }: any) {\n  let hex = color.replace(\"#\", \"\");\n  hex =\n    hex.length === 3\n      ? hex\n          .split(\"\")\n          .map((c: string) => c + c)\n          .join(\"\")\n      : hex;\n\n  const R = parseInt(hex.substr(0, 2), 16) || 0;\n  const G = parseInt(hex.substr(2, 2), 16) || 0;\n  const B = parseInt(hex.substr(4, 2), 16) || 0;\n\n  const handleColorChange = (label: string, value: any) => {\n    let newColor = color.replace(\"#\", \"\");\n    const R = newColor.substr(0, 2);\n    const G = newColor.substr(2, 2);\n    const B = newColor.substr(4, 2);\n    value = value > 255 ? 255 : !value ? 0 : value;\n    value = (\"00\" + parseInt(value, 10).toString(16)).toUpperCase().slice(-2);\n\n    switch (label) {\n      case \"R\":\n        newColor = `#${value}${G}${B}`;\n        break;\n      case \"G\":\n        newColor = `#${R}${value}${B}`;\n        break;\n      default:\n        newColor = `#${R}${G}${value}`;\n        break;\n    }\n    onSelectColor(newColor);\n  };\n  return (\n    <div>\n      <RBGItem label=\"R\" value={R} key=\"R\" onChange={handleColorChange} />\n      <RBGItem label=\"G\" value={G} key=\"G\" onChange={handleColorChange} />\n      <RBGItem label=\"B\" value={B} key=\"B\" onChange={handleColorChange} />\n    </div>\n  );\n}\n\nfunction RBGItem({ label, value, onChange }: any) {\n  useEffect(() => {\n    const handleKey = (evt: any) => {\n      if (evt.keyCode === 38) {\n        evt.preventDefault();\n        onChange(label, parseInt(evt.target.value) + 1);\n      } else if (evt.keyCode === 40) {\n        onChange(label, parseInt(evt.target.value) - 1);\n      }\n    };\n    const input = document.getElementById(label) as HTMLInputElement ;\n    input.addEventListener(\"keydown\", handleKey);\n    return () => {\n      input.removeEventListener(\"keydown\", handleKey);\n    };\n  });\n  return (\n    <div className=\"rgbgroup\">\n      <div className=\"rgblabel\">{label}</div>\n      <input\n        id={label}\n        className=\"rgb\"\n        value={value}\n        onChange={e => onChange(label, e.target.value)}\n        type=\"text\"\n        autoComplete=\"off\"\n      />\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { TextField } from '../components/form-components/TextField';\nimport { Checkbox } from '../components/form-components/Checkbox';\nimport { Button } from '../components/form-components/Button';\nimport Palette from '../components/palette/Palette';\nimport CustomColor from '../components/custom-color/CustomColor';\n\nimport './Modal.scss';\nimport BookmarkModel from '../bookmark';\ntype IPropsType = {\n  onSave: any,\n  dismissModal: any,\n  bookmark: BookmarkModel\n};\n\nexport const Modal = ({onSave, bookmark, dismissModal }: IPropsType ) => {\n  const [value, setValue] =  useState(bookmark.value);\n  const [url, setUrl] =  useState(bookmark.url);\n  const [isExternal, setIsExternal] = useState(bookmark.isExternal);\n  const [color, setColor] = useState(bookmark.backColor);\n\n  const handleFormSubmit = () => {\n    bookmark.isEmpty = false;\n    bookmark.value = value;\n    bookmark.url = url;\n    bookmark.isExternal = isExternal;\n    bookmark.backColor = color;\n    onSave(bookmark);\n  };\n\n  return (\n    <div className=\"Modal\">\n      <div className=\"modal-dialog zoomInUp animated\">\n        <h2 className=\"modal-title\">Bookmark options:</h2>\n        <div className=\"row\">\n          <div className=\"col-left\">\n            <Palette onSelectColor={color => setColor(color)} />\n            <CustomColor color={color} onSelectColor={color => setColor(color)} />\n          </div>\n          <div className=\"col-right\">\n            <TextField id='name' value={value} onChange={(id, value) => setValue(value)} label=\"Name\"/>\n            <TextField id='url' value={url || ''} onChange={(id, url) => setUrl(url)} label=\"Url\"/>\n            <Checkbox checked={isExternal} onChange={(checked) => { setIsExternal(checked)} } />\n            <Button value=\"Cancel\" isPrimary={false} onClick={() => dismissModal()} />\n            <Button value=\"Save\" isPrimary={true} onClick={() => handleFormSubmit()} />\n          </div>\n        </div>\n      </div>\n      <div className=\"modal-backdrop\" onClick={e => dismissModal()}></div>\n    </div>\n  )\n};","import React from 'react';\n\nexport const IconPlus = ({className}: any) =>\n  <svg className={className} viewBox=\"0 0 384 512\"><path d=\"M376 232H216V72c0-4.42-3.58-8-8-8h-32c-4.42 0-8 3.58-8 8v160H8c-4.42 0-8 3.58-8 8v32c0 4.42 3.58 8 8 8h160v160c0 4.42 3.58 8 8 8h32c4.42 0 8-3.58 8-8V280h160c4.42 0 8-3.58 8-8v-32c0-4.42-3.58-8-8-8z\"></path></svg>\n\nexport const EditIcon = ({className}: any) =>\n  <svg className={className} viewBox=\"0 0 512 512\"><path d=\"M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z\"></path></svg>\n\nexport const RemoveIcon = ({className}: any) =>\n  <svg className={className} viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M0 84V56c0-13.3 10.7-24 24-24h112l9.4-18.7c4-8.2 12.3-13.3 21.4-13.3h114.3c9.1 0 17.4 5.1 21.5 13.3L312 32h112c13.3 0 24 10.7 24 24v28c0 6.6-5.4 12-12 12H12C5.4 96 0 90.6 0 84zm416 56v324c0 26.5-21.5 48-48 48H80c-26.5 0-48-21.5-48-48V140c0-6.6 5.4-12 12-12h360c6.6 0 12 5.4 12 12zm-272 68c0-8.8-7.2-16-16-16s-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V208zm96 0c0-8.8-7.2-16-16-16s-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V208zm96 0c0-8.8-7.2-16-16-16s-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V208z\"></path></svg>\n","import React from 'react';\nimport './Bookmark.scss';\nimport BookmarkModel from '../../bookmark';\nimport { IconPlus, EditIcon, RemoveIcon } from '../../icons/Icons';\n\ntype BookmarkProps = {\n  bookmark: BookmarkModel;\n  handleAddEdit: (bookmark: BookmarkModel) => void;\n  handleRemove: (bookmarkKey: number) => void;\n}\nexport const Bookmark = ({bookmark, handleAddEdit, handleRemove}: BookmarkProps) => {\n  const style = {\n    backgroundImage: `url('${bookmark.iconUrl}')`,\n    backgroundColor: bookmark.backColor,\n  };\n  return bookmark.isEmpty?\n    <button className=\"Bookmark empty\" onClick={() => handleAddEdit(bookmark)}>\n      <IconPlus className=\"add-icon\"></IconPlus>\n    </button> :\n    <div className=\"Bookmark filled\" style={style}>\n      <a href={bookmark.url} target={bookmark.isExternal ? '_blank' : '_self'} rel=\"noopener noreferrer\">\n        {bookmark.value && <span className=\"overlay\"> {bookmark.value} </span> }\n      </a>\n      <div className=\"ctas\">\n        <button className=\"cta-button\" onClick={() => handleAddEdit(bookmark)}>\n          <EditIcon className=\"edit-icon\"></EditIcon>\n        </button>\n        <button className=\"cta-button\" onClick={(e) => handleRemove(bookmark.key)}>\n          <RemoveIcon className=\"edit-icon\"></RemoveIcon>\n        </button>\n      </div>\n    </div>\n};","export default class BookmarkModel {\n  constructor(index: number) {\n    this.key = index;\n  }\n  key: number = 0;\n  isEmpty: boolean = true;\n  value: string = '';\n  url?: string;\n  iconUrl?: string;\n  isExternal?: boolean;\n  backColor: string = '#000000';\n};","import React, { useState, useEffect } from 'react';\nimport './BookmarkList.scss';\nimport { Modal } from '../modal/Modal';\nimport { Bookmark } from './bookmark/Bookmark';\nimport BookmarkModel from '../bookmark';\nimport selfLink from './bookmark-images/self-link_light.svg';\nimport selfLinkDark from './bookmark-images/self-link_dark.svg';\nimport externalLink from './bookmark-images/external-link_light.svg';\nimport externalLinkDark from './bookmark-images/external-link_dark.svg';\n\ntype ModalConfig = {\n  showModal: boolean,\n  bookmark: BookmarkModel\n}\n\nconst BookmarkList = () => {\n  const [modalConfig, setModalConfig] = useState({showModal: false, bookmark: new BookmarkModel(0)} as ModalConfig);\n  const [bookmarks, setBookmarks] = useState<BookmarkModel[]>(() => {\n    const strBookmarks = localStorage.getItem('bookmarks');\n    return strBookmarks ? JSON.parse(strBookmarks) : Array.from(Array(8), (e, i) => new BookmarkModel(i));\n  });\n\n  useEffect(() => {\n    localStorage.setItem('bookmarks', JSON.stringify(bookmarks));\n  });\n\n  const handleAddEdit = (bookmark: BookmarkModel) => {\n      setModalConfig({showModal: true, bookmark });\n  }\n  const closeModal = (bookmark: BookmarkModel) => {\n    setModalConfig({showModal: false, bookmark});\n    const backIsDark = isDark(bookmark.backColor);\n    bookmark.iconUrl = bookmark.isExternal ?\n      (backIsDark ? externalLink : externalLinkDark) :\n      (backIsDark ? selfLink : selfLinkDark);\n    bookmarks[bookmark.key] = bookmark;\n    setBookmarks(bookmarks);\n  }\n  const dismissModal = (bookmark: BookmarkModel) => {\n    setModalConfig({showModal: false, bookmark });\n  }\n  const handleRemove = ( bookmarkKey: number) => {\n    bookmarks[bookmarkKey].isEmpty = true;\n    setBookmarks(bookmarks);\n  }\n  return (\n    <>\n      <div className=\"BookmarkList\">\n        {\n          bookmarks.map((bookmark) =>\n            <Bookmark\n              key={bookmark.key}\n              bookmark={bookmark}\n              handleAddEdit={handleAddEdit}\n              handleRemove={handleRemove}>\n            </Bookmark>\n          )\n        }\n      </div>\n      { modalConfig.showModal ?\n        <Modal\n          onSave={closeModal}\n          dismissModal={dismissModal}\n          bookmark={modalConfig.bookmark}>\n        </Modal> :\n        null\n      }\n    </>\n  )\n};\n\nexport default BookmarkList;\n\nfunction isDark(bgColor: string): boolean {\n  var color = (bgColor.charAt(0) === '#') ? bgColor.substring(1, 7) : bgColor;\n  var r = parseInt(color.substring(0, 2), 16); // hexToR\n  var g = parseInt(color.substring(2, 4), 16); // hexToG\n  var b = parseInt(color.substring(4, 6), 16); // hexToB\n  return (((r * 0.299) + (g * 0.587) + (b * 0.114)) < 186);\n}","import React, { useEffect } from 'react';\nimport { Header } from './title/Header';\nimport BookmarkList from './bookmarklist/BookmarkList';\nimport './App.scss';\n\nconst App = () => {\n  const appTitle = 'My Bookmarks';\n  const appDesc = 'Most daily used links';\n\n  return (\n    <div className=\"App\">\n      <Header title={appTitle} desc={appDesc}></Header>\n      <BookmarkList></BookmarkList>\n    </div>\n  )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}